{
  "address": "0xbe6a17d54830ab4a22e80328eb32b99fe3419296",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_platformTreasury",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bountyAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "cid",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stakeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "BountyCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_cid",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_stakeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        }
      ],
      "name": "createBounty",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "deployedBounties",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getDeployedBounties",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "platformTreasury",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "contractName": "BountyFactory",
  "sourceName": "contracts/BountyFactory.sol",
  "bytecode": "0x60a060405234801561000f575f80fd5b50604051611f65380380611f6583398101604081905261002e9161008d565b6001600160a01b03811661007c5760405162461bcd60e51b8152602060048201526011602482015270151c99585cdd5c9e481c995c5d5a5c9959607a1b604482015260640160405180910390fd5b6001600160a01b03166080526100ba565b5f6020828403121561009d575f80fd5b81516001600160a01b03811681146100b3575f80fd5b9392505050565b608051611e8d6100d85f395f818160c701526101780152611e8d5ff3fe60806040526004361061003e575f3560e01c80639d3a400a14610042578063a0bf29fa1461006c578063be5a4a3d146100a3578063e138818c146100b6575b5f80fd5b34801561004d575f80fd5b506100566100e9565b6040516100639190610277565b60405180910390f35b348015610077575f80fd5b5061008b6100863660046102c3565b610148565b6040516001600160a01b039091168152602001610063565b61008b6100b13660046102ee565b61016f565b3480156100c1575f80fd5b5061008b7f000000000000000000000000000000000000000000000000000000000000000081565b60605f80548060200260200160405190810160405280929190818152602001828054801561013e57602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610120575b5050505050905090565b5f8181548110610156575f80fd5b5f918252602090912001546001600160a01b0316905081565b5f8034868686867f00000000000000000000000000000000000000000000000000000000000000006040516101a390610269565b6101b1959493929190610409565b6040518091039082f09050801580156101cc573d5f803e3d5ffd5b505f80546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b038381169182179092556040519293508392918916917f3ee8d765084632a9a3eade7d9c8055aef46516026e5c0309be50e9e7c56d725e90610257908a9034908b908b90610449565b60405180910390a39695505050505050565b6119e0806200047883390190565b602080825282518282018190525f9190848201906040850190845b818110156102b75783516001600160a01b031683529284019291840191600101610292565b50909695505050505050565b5f602082840312156102d3575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215610301575f80fd5b84356001600160a01b0381168114610317575f80fd5b9350602085013567ffffffffffffffff80821115610333575f80fd5b818701915087601f830112610346575f80fd5b813581811115610358576103586102da565b604051601f8201601f19908116603f01168101908382118183101715610380576103806102da565b816040528281528a6020848701011115610398575f80fd5b826020860160208301375f928101602001929092525095989597505050506040840135936060013592915050565b5f81518084525f5b818110156103ea576020818501810151868301820152016103ce565b505f602082860101526020601f19601f83011685010191505092915050565b5f60018060a01b03808816835260a0602084015261042a60a08401886103c6565b6040840196909652606083019490945250911660809091015292915050565b608081525f61045b60808301876103c6565b602083019590955250604081019290925260609091015291905056fe60e0604052604051620019e0380380620019e08339810160408190526200002691620001fb565b5f34116200007b5760405162461bcd60e51b815260206004820152601c60248201527f426f756e747920616d6f756e742063616e6e6f74206265207a65726f0000000060448201526064015b60405180910390fd5b5f8311620000cc5760405162461bcd60e51b815260206004820152601860248201527f5374616b6520616d6f756e74206d757374206265203e20300000000000000000604482015260640162000072565b5f82116200011d5760405162461bcd60e51b815260206004820152601460248201527f4475726174696f6e206d757374206265203e2030000000000000000000000000604482015260640162000072565b6001600160a01b038116620001695760405162461bcd60e51b8152602060048201526011602482015270151c99585cdd5c9e481c995c5d5a5c9959607a1b604482015260640162000072565b5f80546001600160a01b0319166001600160a01b03871617905560026200019185826200038d565b50346001556003805460ff191690556080839052620001b1824262000455565b60a0526001600160a01b031660c052506200047b92505050565b80516001600160a01b0381168114620001e2575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f805f805f60a0868803121562000210575f80fd5b6200021b86620001cb565b602087810151919650906001600160401b03808211156200023a575f80fd5b818901915089601f8301126200024e575f80fd5b815181811115620002635762000263620001e7565b604051601f8201601f19908116603f011681019083821181831017156200028e576200028e620001e7565b816040528281528c86848701011115620002a6575f80fd5b5f93505b82841015620002c95784840186015181850187015292850192620002aa565b5f8684830101528099505050505050506040860151925060608601519150620002f560808701620001cb565b90509295509295909350565b600181811c908216806200031657607f821691505b6020821081036200033557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000388575f81815260208120601f850160051c81016020861015620003635750805b601f850160051c820191505b8181101562000384578281556001016200036f565b5050505b505050565b81516001600160401b03811115620003a957620003a9620001e7565b620003c181620003ba845462000301565b846200033b565b602080601f831160018114620003f7575f8415620003df5750858301515b5f19600386901b1c1916600185901b17855562000384565b5f85815260208120601f198616915b82811015620004275788860151825594840194600190910190840162000406565b50858210156200044557878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200047557634e487b7160e01b5f52601160045260245ffd5b92915050565b60805160a05160c051611502620004de5f395f81816102c70152818161045e015281816104a7015281816106b7015281816107000152610f1e01525f818161015d015281816109860152610c0e01525f81816101e001526109ed01526115025ff3fe6080604052600436106100d9575f3560e01c8063635ac1ed1161007c578063aa3ec0a911610057578063aa3ec0a91461025f578063aa8c217c14610280578063ae4dac4114610295578063e138818c146102b6575f80fd5b8063635ac1ed146102025780638da5cb5b14610215578063a8ec83c51461024b575f80fd5b80633197cbb6116100b75780633197cbb61461014c57806340bc7fa21461018d57806343d726d6146101bb57806360c7dc47146101cf575f80fd5b806319b006d5146100dd578063200d2ed2146100fe5780632a7c02041461012d575b5f80fd5b3480156100e8575f80fd5b506100fc6100f73660046110f5565b6102e9565b005b348015610109575f80fd5b506003546101179060ff1681565b6040516101249190611136565b60405180910390f35b348015610138575f80fd5b506100fc6101473660046110f5565b61054b565b348015610157575f80fd5b5061017f7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610124565b348015610198575f80fd5b506101ac6101a73660046110f5565b6107a4565b60405161012493929190611193565b3480156101c6575f80fd5b506100fc61086e565b3480156101da575f80fd5b5061017f7f000000000000000000000000000000000000000000000000000000000000000081565b6100fc6102103660046111df565b610914565b348015610220575f80fd5b505f54610233906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b348015610256575f80fd5b506100fc610bb6565b34801561026a575f80fd5b50610273610c6e565b604051610124919061128a565b34801561028b575f80fd5b5061017f60015481565b3480156102a0575f80fd5b506102a9610cfa565b604051610124919061129c565b3480156102c1575f80fd5b506102337f000000000000000000000000000000000000000000000000000000000000000081565b5f546001600160a01b031633146103475760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c7920626f756e7479206f776e65722063616e2072656a6563740000000060448201526064015b60405180910390fd5b5f60035460ff16600181111561035f5761035f611122565b1461039e5760405162461bcd60e51b815260206004820152600f60248201526e2137bab73a3c903737ba1037b832b760891b604482015260640161033e565b6001600160a01b0381165f9081526004602052604090206001600282015460ff1660048111156103d0576103d0611122565b146104325760405162461bcd60e51b815260206004820152602c60248201527f4e6f207375626d697373696f6e20746f2072656a656374206f7220616c72656160448201526b191e481c1c9bd8d95cdcd95960a21b606482015260840161033e565b60028101805460ff191660031790556001810180545f9091558015610513576040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169082156108fc029083905f818181858888f193505050501580156104a4573d5f803e3d5ffd5b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03167f99c2ad56961cb3daf3b2b5a5a6c65dc490d85f92aa5a3974aa5e42ad715574b48360405161050a91815260200190565b60405180910390a35b6040516001600160a01b038416907fa9da90ee71c4b5d30cc3c6876bb706f0d79be3409691c4c4ca3eddf55cd956c9905f90a2505050565b5f546001600160a01b031633146105a45760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c7920626f756e7479206f776e65722063616e2061636365707400000000604482015260640161033e565b5f60035460ff1660018111156105bc576105bc611122565b146105fb5760405162461bcd60e51b815260206004820152600f60248201526e2137bab73a3c903737ba1037b832b760891b604482015260640161033e565b6001600160a01b0381165f9081526004602052604090206001600282015460ff16600481111561062d5761062d611122565b1461068a5760405162461bcd60e51b815260206004820152602760248201527f4e6f2070656e64696e67207375626d697373696f6e2066726f6d2074686973206044820152666164647265737360c81b606482015260840161033e565b6002818101805460ff191690911790556001810180545f909155801561076c576040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169082156108fc029083905f818181858888f193505050501580156106fd573d5f803e3d5ffd5b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03167f99c2ad56961cb3daf3b2b5a5a6c65dc490d85f92aa5a3974aa5e42ad715574b48360405161076391815260200190565b60405180910390a35b6040516001600160a01b038416907fccab1be738aee5ee7f8733e18562d55c2a8c96b4deacc429ecc0c660e1bbeaa7905f90a2505050565b6001600160a01b0381165f9081526004602052604081206001810154600282015482546060949384939092839260ff9091169083906107e2906112e8565b80601f016020809104026020016040519081016040528092919081815260200182805461080e906112e8565b80156108595780601f1061083057610100808354040283529160200191610859565b820191905f5260205f20905b81548152906001019060200180831161083c57829003601f168201915b50505050509250935093509350509193909250565b5f546001600160a01b031633146108b45760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640161033e565b5f60035460ff1660018111156108cc576108cc611122565b1461090a5760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e4818db1bdcd95960921b604482015260640161033e565b610912610d5a565b565b5f60035460ff16600181111561092c5761092c611122565b146109845760405162461bcd60e51b815260206004820152602260248201527f426f756e7479206973206e6f74206f70656e20666f72207375626d697373696f6044820152616e7360f01b606482015260840161033e565b7f000000000000000000000000000000000000000000000000000000000000000042106109eb5760405162461bcd60e51b8152602060048201526015602482015274109bdd5b9d1e48191d5c985d1a5bdb88195b991959605a1b604482015260640161033e565b7f00000000000000000000000000000000000000000000000000000000000000003414610a5a5760405162461bcd60e51b815260206004820152601d60248201527f5374616b65206d75737420657175616c20666978656420616d6f756e74000000604482015260640161033e565b335f90815260046020526040812090600282015460ff166004811115610a8257610a82611122565b14610ada5760405162461bcd60e51b815260206004820152602260248201527f416c7265616479207375626d69747465642066726f6d20746869732077616c6c604482015261195d60f21b606482015260840161033e565b80610ae5838261136e565b5034600182810182905560028301805460ff1916821790556005805491820181555f527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b03191633908117909155604051918252907f0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc29060200160405180910390a2336001600160a01b03167f7a5abc33394d749a1c60ce992e97bc96515f7fcc173ea0908de4c36fa73df8a583604051610baa919061128a565b60405180910390a25050565b5f60035460ff166001811115610bce57610bce611122565b14610c0c5760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e4818db1bdcd95960921b604482015260640161033e565b7f000000000000000000000000000000000000000000000000000000000000000042101561090a5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081e595d08195e1c1a5c9959608a1b604482015260640161033e565b60028054610c7b906112e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca7906112e8565b8015610cf25780601f10610cc957610100808354040283529160200191610cf2565b820191905f5260205f20905b815481529060010190602001808311610cd557829003601f168201915b505050505081565b60606005805480602002602001604051908101604052809291908181526020018280548015610d5057602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610d32575b5050505050905090565b6003805460ff191660011790555f805b600554811015610df0575f60045f60058481548110610d8b57610d8b61142a565b5f9182526020808320909101546001600160a01b031683528201929092526040019020905060028082015460ff166004811115610dca57610dca611122565b03610ddd5782610dd981611452565b9350505b5080610de881611452565b915050610d6a565b505f8082118015610e0257505f600154115b15610f6d575f82600154610e16919061146a565b90505f610e238483611489565b600154610e3091906114a6565b90505f5b600554811015610f0a575f60045f60058481548110610e5557610e5561142a565b5f9182526020808320909101546001600160a01b031683528201929092526040019020905060028082015460ff166004811115610e9457610e94611122565b03610ef75760058281548110610eac57610eac61142a565b5f9182526020822001546040516001600160a01b039091169186156108fc02918791818181858888f19350505050158015610ee9573d5f803e3d5ffd5b50610ef484866114b9565b94505b5080610f0281611452565b915050610e34565b508015610f66576040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169082156108fc029083905f818181858888f19350505050158015610f64573d5f803e3d5ffd5b505b50505f6001555b5f5b6005548110156110b7575f60045f60058481548110610f9057610f9061142a565b5f9182526020808320909101546001600160a01b03168352820192909252604001902090506001600282015460ff166004811115610fd057610fd0611122565b036110a4576001810180545f90915560028201805460ff1916600417905580156110a257600583815481106110075761100761142a565b5f9182526020822001546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015611044573d5f803e3d5ffd5b50600583815481106110585761105861142a565b5f91825260209182902001546040518381526001600160a01b03909116917ff247ed1040aa5b17569282cc01923fbdd01401fa63e12930d59be4a5e87aa7d6910160405180910390a25b505b50806110af81611452565b915050610f6f565b5060408051838152602081018390527fe44903a04328507d74e4709cbebc6c819f9f1cd0b7cb171ba22814fcc18ecf38910160405180910390a15050565b5f60208284031215611105575f80fd5b81356001600160a01b038116811461111b575f80fd5b9392505050565b634e487b7160e01b5f52602160045260245ffd5b602081016002831061114a5761114a611122565b91905290565b5f81518084525f5b8181101561117457602081850181015186830182015201611158565b505f602082860101526020601f19601f83011685010191505092915050565b606081525f6111a56060830186611150565b9050836020830152600583106111bd576111bd611122565b826040830152949350505050565b634e487b7160e01b5f52604160045260245ffd5b5f602082840312156111ef575f80fd5b813567ffffffffffffffff80821115611206575f80fd5b818401915084601f830112611219575f80fd5b81358181111561122b5761122b6111cb565b604051601f8201601f19908116603f01168101908382118183101715611253576112536111cb565b8160405282815287602084870101111561126b575f80fd5b826020860160208301375f928101602001929092525095945050505050565b602081525f61111b6020830184611150565b602080825282518282018190525f9190848201906040850190845b818110156112dc5783516001600160a01b0316835292840192918401916001016112b7565b50909695505050505050565b600181811c908216806112fc57607f821691505b60208210810361131a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115611369575f81815260208120601f850160051c810160208610156113465750805b601f850160051c820191505b8181101561136557828155600101611352565b5050505b505050565b815167ffffffffffffffff811115611388576113886111cb565b61139c8161139684546112e8565b84611320565b602080601f8311600181146113cf575f84156113b85750858301515b5f19600386901b1c1916600185901b178555611365565b5f85815260208120601f198616915b828110156113fd578886015182559484019460019091019084016113de565b508582101561141a57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f600182016114635761146361143e565b5060010190565b5f8261148457634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176114a0576114a061143e565b92915050565b818103818111156114a0576114a061143e565b808201808211156114a0576114a061143e56fea26469706673582212203b750ac3cfd2830f79b6dbc45011e264182e2b8ce756554ade475cd05879936264736f6c63430008140033a26469706673582212205c895efad6c3fc58cf1fc9ff7c06a4acef557d2494603e61f83cfc207a7bf53264736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061003e575f3560e01c80639d3a400a14610042578063a0bf29fa1461006c578063be5a4a3d146100a3578063e138818c146100b6575b5f80fd5b34801561004d575f80fd5b506100566100e9565b6040516100639190610277565b60405180910390f35b348015610077575f80fd5b5061008b6100863660046102c3565b610148565b6040516001600160a01b039091168152602001610063565b61008b6100b13660046102ee565b61016f565b3480156100c1575f80fd5b5061008b7f000000000000000000000000000000000000000000000000000000000000000081565b60605f80548060200260200160405190810160405280929190818152602001828054801561013e57602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610120575b5050505050905090565b5f8181548110610156575f80fd5b5f918252602090912001546001600160a01b0316905081565b5f8034868686867f00000000000000000000000000000000000000000000000000000000000000006040516101a390610269565b6101b1959493929190610409565b6040518091039082f09050801580156101cc573d5f803e3d5ffd5b505f80546001810182559080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630180546001600160a01b0319166001600160a01b038381169182179092556040519293508392918916917f3ee8d765084632a9a3eade7d9c8055aef46516026e5c0309be50e9e7c56d725e90610257908a9034908b908b90610449565b60405180910390a39695505050505050565b6119e0806200047883390190565b602080825282518282018190525f9190848201906040850190845b818110156102b75783516001600160a01b031683529284019291840191600101610292565b50909695505050505050565b5f602082840312156102d3575f80fd5b5035919050565b634e487b7160e01b5f52604160045260245ffd5b5f805f8060808587031215610301575f80fd5b84356001600160a01b0381168114610317575f80fd5b9350602085013567ffffffffffffffff80821115610333575f80fd5b818701915087601f830112610346575f80fd5b813581811115610358576103586102da565b604051601f8201601f19908116603f01168101908382118183101715610380576103806102da565b816040528281528a6020848701011115610398575f80fd5b826020860160208301375f928101602001929092525095989597505050506040840135936060013592915050565b5f81518084525f5b818110156103ea576020818501810151868301820152016103ce565b505f602082860101526020601f19601f83011685010191505092915050565b5f60018060a01b03808816835260a0602084015261042a60a08401886103c6565b6040840196909652606083019490945250911660809091015292915050565b608081525f61045b60808301876103c6565b602083019590955250604081019290925260609091015291905056fe60e0604052604051620019e0380380620019e08339810160408190526200002691620001fb565b5f34116200007b5760405162461bcd60e51b815260206004820152601c60248201527f426f756e747920616d6f756e742063616e6e6f74206265207a65726f0000000060448201526064015b60405180910390fd5b5f8311620000cc5760405162461bcd60e51b815260206004820152601860248201527f5374616b6520616d6f756e74206d757374206265203e20300000000000000000604482015260640162000072565b5f82116200011d5760405162461bcd60e51b815260206004820152601460248201527f4475726174696f6e206d757374206265203e2030000000000000000000000000604482015260640162000072565b6001600160a01b038116620001695760405162461bcd60e51b8152602060048201526011602482015270151c99585cdd5c9e481c995c5d5a5c9959607a1b604482015260640162000072565b5f80546001600160a01b0319166001600160a01b03871617905560026200019185826200038d565b50346001556003805460ff191690556080839052620001b1824262000455565b60a0526001600160a01b031660c052506200047b92505050565b80516001600160a01b0381168114620001e2575f80fd5b919050565b634e487b7160e01b5f52604160045260245ffd5b5f805f805f60a0868803121562000210575f80fd5b6200021b86620001cb565b602087810151919650906001600160401b03808211156200023a575f80fd5b818901915089601f8301126200024e575f80fd5b815181811115620002635762000263620001e7565b604051601f8201601f19908116603f011681019083821181831017156200028e576200028e620001e7565b816040528281528c86848701011115620002a6575f80fd5b5f93505b82841015620002c95784840186015181850187015292850192620002aa565b5f8684830101528099505050505050506040860151925060608601519150620002f560808701620001cb565b90509295509295909350565b600181811c908216806200031657607f821691505b6020821081036200033557634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111562000388575f81815260208120601f850160051c81016020861015620003635750805b601f850160051c820191505b8181101562000384578281556001016200036f565b5050505b505050565b81516001600160401b03811115620003a957620003a9620001e7565b620003c181620003ba845462000301565b846200033b565b602080601f831160018114620003f7575f8415620003df5750858301515b5f19600386901b1c1916600185901b17855562000384565b5f85815260208120601f198616915b82811015620004275788860151825594840194600190910190840162000406565b50858210156200044557878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b808201808211156200047557634e487b7160e01b5f52601160045260245ffd5b92915050565b60805160a05160c051611502620004de5f395f81816102c70152818161045e015281816104a7015281816106b7015281816107000152610f1e01525f818161015d015281816109860152610c0e01525f81816101e001526109ed01526115025ff3fe6080604052600436106100d9575f3560e01c8063635ac1ed1161007c578063aa3ec0a911610057578063aa3ec0a91461025f578063aa8c217c14610280578063ae4dac4114610295578063e138818c146102b6575f80fd5b8063635ac1ed146102025780638da5cb5b14610215578063a8ec83c51461024b575f80fd5b80633197cbb6116100b75780633197cbb61461014c57806340bc7fa21461018d57806343d726d6146101bb57806360c7dc47146101cf575f80fd5b806319b006d5146100dd578063200d2ed2146100fe5780632a7c02041461012d575b5f80fd5b3480156100e8575f80fd5b506100fc6100f73660046110f5565b6102e9565b005b348015610109575f80fd5b506003546101179060ff1681565b6040516101249190611136565b60405180910390f35b348015610138575f80fd5b506100fc6101473660046110f5565b61054b565b348015610157575f80fd5b5061017f7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610124565b348015610198575f80fd5b506101ac6101a73660046110f5565b6107a4565b60405161012493929190611193565b3480156101c6575f80fd5b506100fc61086e565b3480156101da575f80fd5b5061017f7f000000000000000000000000000000000000000000000000000000000000000081565b6100fc6102103660046111df565b610914565b348015610220575f80fd5b505f54610233906001600160a01b031681565b6040516001600160a01b039091168152602001610124565b348015610256575f80fd5b506100fc610bb6565b34801561026a575f80fd5b50610273610c6e565b604051610124919061128a565b34801561028b575f80fd5b5061017f60015481565b3480156102a0575f80fd5b506102a9610cfa565b604051610124919061129c565b3480156102c1575f80fd5b506102337f000000000000000000000000000000000000000000000000000000000000000081565b5f546001600160a01b031633146103475760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c7920626f756e7479206f776e65722063616e2072656a6563740000000060448201526064015b60405180910390fd5b5f60035460ff16600181111561035f5761035f611122565b1461039e5760405162461bcd60e51b815260206004820152600f60248201526e2137bab73a3c903737ba1037b832b760891b604482015260640161033e565b6001600160a01b0381165f9081526004602052604090206001600282015460ff1660048111156103d0576103d0611122565b146104325760405162461bcd60e51b815260206004820152602c60248201527f4e6f207375626d697373696f6e20746f2072656a656374206f7220616c72656160448201526b191e481c1c9bd8d95cdcd95960a21b606482015260840161033e565b60028101805460ff191660031790556001810180545f9091558015610513576040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169082156108fc029083905f818181858888f193505050501580156104a4573d5f803e3d5ffd5b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03167f99c2ad56961cb3daf3b2b5a5a6c65dc490d85f92aa5a3974aa5e42ad715574b48360405161050a91815260200190565b60405180910390a35b6040516001600160a01b038416907fa9da90ee71c4b5d30cc3c6876bb706f0d79be3409691c4c4ca3eddf55cd956c9905f90a2505050565b5f546001600160a01b031633146105a45760405162461bcd60e51b815260206004820152601c60248201527f4f6e6c7920626f756e7479206f776e65722063616e2061636365707400000000604482015260640161033e565b5f60035460ff1660018111156105bc576105bc611122565b146105fb5760405162461bcd60e51b815260206004820152600f60248201526e2137bab73a3c903737ba1037b832b760891b604482015260640161033e565b6001600160a01b0381165f9081526004602052604090206001600282015460ff16600481111561062d5761062d611122565b1461068a5760405162461bcd60e51b815260206004820152602760248201527f4e6f2070656e64696e67207375626d697373696f6e2066726f6d2074686973206044820152666164647265737360c81b606482015260840161033e565b6002818101805460ff191690911790556001810180545f909155801561076c576040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169082156108fc029083905f818181858888f193505050501580156106fd573d5f803e3d5ffd5b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b03167f99c2ad56961cb3daf3b2b5a5a6c65dc490d85f92aa5a3974aa5e42ad715574b48360405161076391815260200190565b60405180910390a35b6040516001600160a01b038416907fccab1be738aee5ee7f8733e18562d55c2a8c96b4deacc429ecc0c660e1bbeaa7905f90a2505050565b6001600160a01b0381165f9081526004602052604081206001810154600282015482546060949384939092839260ff9091169083906107e2906112e8565b80601f016020809104026020016040519081016040528092919081815260200182805461080e906112e8565b80156108595780601f1061083057610100808354040283529160200191610859565b820191905f5260205f20905b81548152906001019060200180831161083c57829003601f168201915b50505050509250935093509350509193909250565b5f546001600160a01b031633146108b45760405162461bcd60e51b815260206004820152600a60248201526927b7363c9037bbb732b960b11b604482015260640161033e565b5f60035460ff1660018111156108cc576108cc611122565b1461090a5760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e4818db1bdcd95960921b604482015260640161033e565b610912610d5a565b565b5f60035460ff16600181111561092c5761092c611122565b146109845760405162461bcd60e51b815260206004820152602260248201527f426f756e7479206973206e6f74206f70656e20666f72207375626d697373696f6044820152616e7360f01b606482015260840161033e565b7f000000000000000000000000000000000000000000000000000000000000000042106109eb5760405162461bcd60e51b8152602060048201526015602482015274109bdd5b9d1e48191d5c985d1a5bdb88195b991959605a1b604482015260640161033e565b7f00000000000000000000000000000000000000000000000000000000000000003414610a5a5760405162461bcd60e51b815260206004820152601d60248201527f5374616b65206d75737420657175616c20666978656420616d6f756e74000000604482015260640161033e565b335f90815260046020526040812090600282015460ff166004811115610a8257610a82611122565b14610ada5760405162461bcd60e51b815260206004820152602260248201527f416c7265616479207375626d69747465642066726f6d20746869732077616c6c604482015261195d60f21b606482015260840161033e565b80610ae5838261136e565b5034600182810182905560028301805460ff1916821790556005805491820181555f527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b03191633908117909155604051918252907f0a7bb2e28cc4698aac06db79cf9163bfcc20719286cf59fa7d492ceda1b8edc29060200160405180910390a2336001600160a01b03167f7a5abc33394d749a1c60ce992e97bc96515f7fcc173ea0908de4c36fa73df8a583604051610baa919061128a565b60405180910390a25050565b5f60035460ff166001811115610bce57610bce611122565b14610c0c5760405162461bcd60e51b815260206004820152600e60248201526d105b1c9958591e4818db1bdcd95960921b604482015260640161033e565b7f000000000000000000000000000000000000000000000000000000000000000042101561090a5760405162461bcd60e51b815260206004820152600f60248201526e139bdd081e595d08195e1c1a5c9959608a1b604482015260640161033e565b60028054610c7b906112e8565b80601f0160208091040260200160405190810160405280929190818152602001828054610ca7906112e8565b8015610cf25780601f10610cc957610100808354040283529160200191610cf2565b820191905f5260205f20905b815481529060010190602001808311610cd557829003601f168201915b505050505081565b60606005805480602002602001604051908101604052809291908181526020018280548015610d5057602002820191905f5260205f20905b81546001600160a01b03168152600190910190602001808311610d32575b5050505050905090565b6003805460ff191660011790555f805b600554811015610df0575f60045f60058481548110610d8b57610d8b61142a565b5f9182526020808320909101546001600160a01b031683528201929092526040019020905060028082015460ff166004811115610dca57610dca611122565b03610ddd5782610dd981611452565b9350505b5080610de881611452565b915050610d6a565b505f8082118015610e0257505f600154115b15610f6d575f82600154610e16919061146a565b90505f610e238483611489565b600154610e3091906114a6565b90505f5b600554811015610f0a575f60045f60058481548110610e5557610e5561142a565b5f9182526020808320909101546001600160a01b031683528201929092526040019020905060028082015460ff166004811115610e9457610e94611122565b03610ef75760058281548110610eac57610eac61142a565b5f9182526020822001546040516001600160a01b039091169186156108fc02918791818181858888f19350505050158015610ee9573d5f803e3d5ffd5b50610ef484866114b9565b94505b5080610f0281611452565b915050610e34565b508015610f66576040516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169082156108fc029083905f818181858888f19350505050158015610f64573d5f803e3d5ffd5b505b50505f6001555b5f5b6005548110156110b7575f60045f60058481548110610f9057610f9061142a565b5f9182526020808320909101546001600160a01b03168352820192909252604001902090506001600282015460ff166004811115610fd057610fd0611122565b036110a4576001810180545f90915560028201805460ff1916600417905580156110a257600583815481106110075761100761142a565b5f9182526020822001546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015611044573d5f803e3d5ffd5b50600583815481106110585761105861142a565b5f91825260209182902001546040518381526001600160a01b03909116917ff247ed1040aa5b17569282cc01923fbdd01401fa63e12930d59be4a5e87aa7d6910160405180910390a25b505b50806110af81611452565b915050610f6f565b5060408051838152602081018390527fe44903a04328507d74e4709cbebc6c819f9f1cd0b7cb171ba22814fcc18ecf38910160405180910390a15050565b5f60208284031215611105575f80fd5b81356001600160a01b038116811461111b575f80fd5b9392505050565b634e487b7160e01b5f52602160045260245ffd5b602081016002831061114a5761114a611122565b91905290565b5f81518084525f5b8181101561117457602081850181015186830182015201611158565b505f602082860101526020601f19601f83011685010191505092915050565b606081525f6111a56060830186611150565b9050836020830152600583106111bd576111bd611122565b826040830152949350505050565b634e487b7160e01b5f52604160045260245ffd5b5f602082840312156111ef575f80fd5b813567ffffffffffffffff80821115611206575f80fd5b818401915084601f830112611219575f80fd5b81358181111561122b5761122b6111cb565b604051601f8201601f19908116603f01168101908382118183101715611253576112536111cb565b8160405282815287602084870101111561126b575f80fd5b826020860160208301375f928101602001929092525095945050505050565b602081525f61111b6020830184611150565b602080825282518282018190525f9190848201906040850190845b818110156112dc5783516001600160a01b0316835292840192918401916001016112b7565b50909695505050505050565b600181811c908216806112fc57607f821691505b60208210810361131a57634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115611369575f81815260208120601f850160051c810160208610156113465750805b601f850160051c820191505b8181101561136557828155600101611352565b5050505b505050565b815167ffffffffffffffff811115611388576113886111cb565b61139c8161139684546112e8565b84611320565b602080601f8311600181146113cf575f84156113b85750858301515b5f19600386901b1c1916600185901b178555611365565b5f85815260208120601f198616915b828110156113fd578886015182559484019460019091019084016113de565b508582101561141a57878501515f19600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f600182016114635761146361143e565b5060010190565b5f8261148457634e487b7160e01b5f52601260045260245ffd5b500490565b80820281158282048414176114a0576114a061143e565b92915050565b818103818111156114a0576114a061143e565b808201808211156114a0576114a061143e56fea26469706673582212203b750ac3cfd2830f79b6dbc45011e264182e2b8ce756554ade475cd05879936264736f6c63430008140033a26469706673582212205c895efad6c3fc58cf1fc9ff7c06a4acef557d2494603e61f83cfc207a7bf53264736f6c63430008140033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "immutableReferences": {
    "719": [
      {
        "length": 32,
        "start": 199
      },
      {
        "length": 32,
        "start": 376
      }
    ]
  },
  "inputSourceName": "project/contracts/BountyFactory.sol",
  "devdoc": {
    "details": "A factory contract to create and deploy new Bounty contracts.",
    "kind": "dev",
    "methods": {
      "createBounty(address,string,uint256,uint256)": {
        "details": "Creates and deploys a new Bounty contract, funding it with the sent ETH.",
        "params": {
          "_cid": "The IPFS CID for the bounty's metadata.",
          "_owner": "The address that will own the new bounty."
        },
        "returns": {
          "_0": "The address of the newly created Bounty contract."
        }
      },
      "getDeployedBounties()": {
        "details": "Returns a list of all bounty contract addresses created by this factory."
      }
    },
    "title": "BountyFactory",
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "1564200",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "createBounty(address,string,uint256,uint256)": "infinite",
        "deployedBounties(uint256)": "4610",
        "getDeployedBounties()": "infinite",
        "platformTreasury()": "infinite"
      }
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_platformTreasury\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bountyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"cid\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"BountyCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_cid\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"}],\"name\":\"createBounty\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deployedBounties\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDeployedBounties\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"platformTreasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A factory contract to create and deploy new Bounty contracts.\",\"kind\":\"dev\",\"methods\":{\"createBounty(address,string,uint256,uint256)\":{\"details\":\"Creates and deploys a new Bounty contract, funding it with the sent ETH.\",\"params\":{\"_cid\":\"The IPFS CID for the bounty's metadata.\",\"_owner\":\"The address that will own the new bounty.\"},\"returns\":{\"_0\":\"The address of the newly created Bounty contract.\"}},\"getDeployedBounties()\":{\"details\":\"Returns a list of all bounty contract addresses created by this factory.\"}},\"title\":\"BountyFactory\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project/contracts/BountyFactory.sol\":\"BountyFactory\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project/contracts/Bounty.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\n/**\\n * @title Bounty\\n * @dev A contract representing a single bug bounty with a locked amount of ETH.\\n */\\ncontract Bounty {\\n    // Bounty-level status: only Open or Closed\\n    enum Status {\\n        Open,\\n        Closed\\n    }\\n\\n    // Per-submission status\\n    enum SubmissionState {\\n        None,\\n        Pending,\\n        Accepted,\\n        Rejected,\\n        Refunded\\n    }\\n\\n    address public owner;\\n    uint256 public amount;\\n    string public cid; // IPFS CID for bounty details (title, description, severity)\\n    Status public status;\\n    uint256 public immutable stakeAmount; // fixed stake decided by the bounty creator, immutable\\n    uint256 public immutable endTime; // timestamp when bounty closes automatically\\n    address public immutable platformTreasury; // treasury to receive winners' stake and slashed stakes\\n\\n    struct Submission {\\n        string reportCid;\\n        uint256 stake;\\n        SubmissionState state;\\n    }\\n\\n    mapping(address => Submission) private _submissions; // per-wallet single submission\\n    address[] private _submitters;\\n\\n    event ReportSubmitted(address indexed researcher, string reportCid);\\n    event SubmissionAccepted(address indexed researcher);\\n    event SubmissionRejected(address indexed researcher);\\n    event FundsReleased(address indexed researcher, uint256 amount);\\n    event StakeDeposited(address indexed researcher, uint256 amount);\\n    event StakeRefunded(address indexed researcher, uint256 amount);\\n    event StakeSlashed(address indexed researcher, uint256 amount, address indexed receiver);\\n    event BountyClosed(uint256 winners, uint256 totalPaid);\\n\\n    constructor(\\n        address _owner,\\n        string memory _cid,\\n        uint256 _stakeAmount,\\n        uint256 _duration,\\n        address _platformTreasury\\n    ) payable {\\n        require(msg.value > 0, \\\"Bounty amount cannot be zero\\\");\\n        require(_stakeAmount > 0, \\\"Stake amount must be > 0\\\");\\n        require(_duration > 0, \\\"Duration must be > 0\\\");\\n        require(_platformTreasury != address(0), \\\"Treasury required\\\");\\n        owner = _owner;\\n        cid = _cid;\\n        amount = msg.value;\\n        status = Status.Open;\\n        stakeAmount = _stakeAmount;\\n        endTime = block.timestamp + _duration;\\n        platformTreasury = _platformTreasury;\\n    }\\n\\n    /**\\n     * @dev Allows any address to submit a report for an open bounty.\\n     * @param _reportCid The IPFS CID of the vulnerability report.\\n     */\\n    function submitReport(string memory _reportCid) external payable {\\n        require(status == Status.Open, \\\"Bounty is not open for submissions\\\");\\n        require(block.timestamp < endTime, \\\"Bounty duration ended\\\");\\n        require(msg.value == stakeAmount, \\\"Stake must equal fixed amount\\\");\\n        Submission storage subm = _submissions[msg.sender];\\n        require(subm.state == SubmissionState.None, \\\"Already submitted from this wallet\\\");\\n\\n        subm.reportCid = _reportCid;\\n        subm.stake = msg.value;\\n        subm.state = SubmissionState.Pending;\\n        _submitters.push(msg.sender);\\n\\n        emit StakeDeposited(msg.sender, msg.value);\\n        emit ReportSubmitted(msg.sender, _reportCid);\\n    }\\n\\n    /**\\n     * @dev Allows the bounty owner to approve a submission and release funds.\\n     */\\n    function acceptSubmission(address _researcher) external {\\n        require(msg.sender == owner, \\\"Only bounty owner can accept\\\");\\n        require(status == Status.Open, \\\"Bounty not open\\\");\\n        Submission storage subm = _submissions[_researcher];\\n        require(subm.state == SubmissionState.Pending, \\\"No pending submission from this address\\\");\\n\\n        // Mark accepted and move stake to treasury immediately\\n        subm.state = SubmissionState.Accepted;\\n        uint256 _stake = subm.stake;\\n        subm.stake = 0;\\n        if (_stake > 0) {\\n            payable(platformTreasury).transfer(_stake);\\n            emit StakeSlashed(_researcher, _stake, platformTreasury);\\n        }\\n        emit SubmissionAccepted(_researcher);\\n    }\\n\\n    /**\\n     * @dev Allows the bounty owner to reject a submission.\\n     */\\n    function rejectSubmission(address _researcher) external {\\n        require(msg.sender == owner, \\\"Only bounty owner can reject\\\");\\n        require(status == Status.Open, \\\"Bounty not open\\\");\\n        Submission storage subm = _submissions[_researcher];\\n        require(subm.state == SubmissionState.Pending, \\\"No submission to reject or already processed\\\");\\n\\n        subm.state = SubmissionState.Rejected;\\n        uint256 _stake = subm.stake;\\n        subm.stake = 0;\\n        // Slash the researcher's stake and transfer to treasury as anti-spam penalty\\n        if (_stake > 0) {\\n            payable(platformTreasury).transfer(_stake);\\n            emit StakeSlashed(_researcher, _stake, platformTreasury);\\n        }\\n        emit SubmissionRejected(_researcher);\\n    }\\n\\n    /**\\n     * @dev Allows owner to close the bounty at any time. Distributes rewards and refunds stakes.\\n     */\\n    function close() external {\\n        require(msg.sender == owner, \\\"Only owner\\\");\\n        require(status == Status.Open, \\\"Already closed\\\");\\n        _closeAndSettle();\\n    }\\n\\n    /**\\n     * @dev Allows anyone to close after the duration has passed.\\n     */\\n    function closeIfExpired() external {\\n        require(status == Status.Open, \\\"Already closed\\\");\\n        require(block.timestamp >= endTime, \\\"Not yet expired\\\");\\n        _closeAndSettle();\\n    }\\n\\n    function _closeAndSettle() internal {\\n        status = Status.Closed;\\n\\n        // Count winners\\n        uint256 winners = 0;\\n        for (uint256 i = 0; i < _submitters.length; i++) {\\n            Submission storage s = _submissions[_submitters[i]];\\n            if (s.state == SubmissionState.Accepted) {\\n                winners++;\\n            }\\n        }\\n\\n        uint256 totalPaid = 0;\\n        if (winners > 0 && amount > 0) {\\n            uint256 share = amount / winners;\\n            uint256 remainder = amount - (share * winners);\\n            for (uint256 i = 0; i < _submitters.length; i++) {\\n                Submission storage s = _submissions[_submitters[i]];\\n                if (s.state == SubmissionState.Accepted) {\\n                    payable(_submitters[i]).transfer(share);\\n                    totalPaid += share;\\n                }\\n            }\\n            if (remainder > 0) {\\n                // send dust to treasury to avoid stuck funds\\n                payable(platformTreasury).transfer(remainder);\\n            }\\n            amount = 0;\\n        }\\n\\n        // Refund stakes for untouched submissions, and mark as Refunded\\n        for (uint256 i = 0; i < _submitters.length; i++) {\\n            Submission storage s2 = _submissions[_submitters[i]];\\n            if (s2.state == SubmissionState.Pending) {\\n                uint256 st = s2.stake;\\n                s2.stake = 0;\\n                s2.state = SubmissionState.Refunded;\\n                if (st > 0) {\\n                    payable(_submitters[i]).transfer(st);\\n                    emit StakeRefunded(_submitters[i], st);\\n                }\\n            }\\n        }\\n\\n        emit BountyClosed(winners, totalPaid);\\n    }\\n\\n    /**\\n     * @dev Allows the bounty owner to update the minimum stake required for submissions.\\n     * @param _minStake The new minimum stake in wei.\\n     */\\n    /**\\n     * @dev Returns the list of submitter addresses.\\n     */\\n    function getSubmitters() external view returns (address[] memory) {\\n        return _submitters;\\n    }\\n\\n    /**\\n     * @dev Returns a submission details for a given researcher.\\n     */\\n    function getSubmission(address _researcher) external view returns (string memory, uint256, SubmissionState) {\\n        Submission storage s = _submissions[_researcher];\\n        return (s.reportCid, s.stake, s.state);\\n    }\\n}\\n\",\"keccak256\":\"0x67bdabcd5c0c2b58d5b2de075fc7748ac12d866dc7818977726b5bd51a937dc3\",\"license\":\"MIT\"},\"project/contracts/BountyFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"./Bounty.sol\\\";\\n\\n/**\\n * @title BountyFactory\\n * @dev A factory contract to create and deploy new Bounty contracts.\\n */\\ncontract BountyFactory {\\n    address[] public deployedBounties;\\n    address public immutable platformTreasury;\\n\\n    event BountyCreated(\\n        address indexed bountyAddress,\\n        address indexed owner,\\n        string cid,\\n        uint256 amount,\\n        uint256 stakeAmount,\\n        uint256 duration\\n    );\\n\\n    constructor(address _platformTreasury) {\\n        require(_platformTreasury != address(0), \\\"Treasury required\\\");\\n        platformTreasury = _platformTreasury;\\n    }\\n\\n    /**\\n     * @dev Creates and deploys a new Bounty contract, funding it with the sent ETH.\\n     * @param _owner The address that will own the new bounty.\\n     * @param _cid The IPFS CID for the bounty's metadata.\\n     * @return The address of the newly created Bounty contract.\\n     */\\n    function createBounty(\\n        address _owner,\\n        string memory _cid,\\n        uint256 _stakeAmount,\\n        uint256 _duration\\n    ) external payable returns (address) {\\n        // Forward ETH to new bounty as reward pool\\n        Bounty newBounty = new Bounty{ value: msg.value }(_owner, _cid, _stakeAmount, _duration, platformTreasury);\\n\\n        address newBountyAddress = address(newBounty);\\n        deployedBounties.push(newBountyAddress);\\n\\n        emit BountyCreated(newBountyAddress, _owner, _cid, msg.value, _stakeAmount, _duration);\\n        return newBountyAddress;\\n    }\\n\\n    /**\\n     * @dev Returns a list of all bounty contract addresses created by this factory.\\n     */\\n    function getDeployedBounties() external view returns (address[] memory) {\\n        return deployedBounties;\\n    }\\n}\\n\",\"keccak256\":\"0x11775665c085cb7b5c1bc947205785549ba88403ea406ce71f0ae92ff5f2086a\",\"license\":\"MIT\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 717,
        "contract": "project/contracts/BountyFactory.sol:BountyFactory",
        "label": "deployedBounties",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "argsData": "0x000000000000000000000000073100b277a428b035eee98ec4d47b734a42bcaf",
  "transaction": {
    "hash": "0x0c709f1f3e6c372da439e71c45dac61462d2432b46dba8a42f95b2d17d00827f",
    "nonce": "0x1",
    "origin": "0x073100b277a428b035eee98ec4d47b734a42bcaf"
  },
  "receipt": {
    "blockHash": "0x4c23396176edf34c3f96e58ea71d91dc4702c16fedc7842c3b215c0494e9b0a9",
    "blockNumber": "0x9087cd",
    "transactionIndex": "0x2e"
  }
}